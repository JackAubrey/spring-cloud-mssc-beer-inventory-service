## ###################################################
## Server Configuration
##
##  *   spring.application.name
##      Used by Eureka. The application name is mandatory for Eureka
## ###################################################
server.port=8082
spring.application.name=inventory-service

## ###################################################
## Basic Auth Configuration
##
## These should inject via ENV
## NOTE: Since this is a client it uses the spring cloud config properties
##       Pay attention to not use the Spring Security properties
## ###################################################
spring.cloud.config.username=MyUserName
spring.cloud.config.password=MySecretPassword

## ###################################################
## Distributed Tracing Configuration
##
## SEE: look the mssc-config-repo project to see the properties
##
## Zipkin works with Micrometer to provide a
## distributed tracing system
## Sleuth is no longer supported with Spring Boot 3.x
##
## Zipkin is a distributed tracing system.
## NEED a Zipkin Server
##  docker run --name zipkin -d -p 9411:9411 openzipkin/zipkin
## It helps gather timing data needed to troubleshoot latency problems in service architectures.
## Features include both the collection and lookup of this data.
## If you have a trace ID in a log file, you can jump directly to it.
## ###################################################
management.tracing.enabled=false

## ###################################################
## Eureka Client Discovery Configuration
## ###################################################
eureka.client.service-url.defaultZone=http://netflix:eureka@localhost:8761/eureka

## ###################################################
## Logging Configuration
## ###################################################
logging.level.guru=debug

## ###################################################
## Artemis ActiveMQ parameters
## ###################################################
spring.artemis.user=artemis
spring.artemis.password=artemis